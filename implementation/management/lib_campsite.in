function query($qs,$r='',$setvars=true)
{
//	print "query: $qs<br>";
    $a=mysql_query($qs);
//    	print "query res: $a<br>";
    $fl=strtoupper(substr($qs,0,1));
    $GLOBALS['NUM_ROWS']=0;
    $GLOBALS['AFFECTED_ROWS']=0;
    if ($setvars) {
	//print $fl;
        if ($fl=='S')
	    $GLOBALS['NUM_ROWS']=mysql_num_rows($a);
        else
	    $GLOBALS['AFFECTED_ROWS']=mysql_affected_rows();
	//print "num=".$GLOBALS['NUM_ROWS']." aff=".$GLOBALS['AFFECTED_ROWS'];
    }
    if ($r!='')
        $GLOBALS[$r]=$a;
    if (isset($GLOBALS['debug']))
	print $qs.$a;
}

function encURL($s)
{
    return rawurlencode($s);
}

function decURL($s)
{
    return rawurldecode($s);
}

function pencURL($s)
{
    print rawurlencode($s);
}

function pdecURL($s)
{
    print rawurldecode($s);
}

function encHTML($s)
{
    $res_str = str_replace("&", "&amp;", $s);
    $res_str = str_replace("<", "&lt;", $res_str);
    $res_str = str_replace(">", "&gt;", $res_str);
    $res_str = str_replace("\"", "&quot;", $res_str);
    $res_str = str_replace("\r\n", "<BR>\r", $res_str);
    return $res_str;
//    return htmlentities($s);
}

function pencHTML($s)
{
    print encHTML($s);
//    print htmlentities($s);
}

function todef($s,$v='')
{
    if (!isset($GLOBALS[$s]))
	$GLOBALS[$s]=$v;
    if (!get_magic_quotes_gpc())
	$GLOBALS[$s] = mysql_escape_string($GLOBALS[$s]);
}

function encSQL($s)
{
    if (!get_magic_quotes_gpc())
	return mysql_escape_string($s);
    return $s;
}

function todefnum($s,$v=0)
{
	if (!isset($GLOBALS[$s]))
		$GLOBALS[$s]=$v;
}

function fetchRow($q)
{
    $GLOBALS['fetch_'.$q]=mysql_fetch_array($q,MYSQL_ASSOC);
}

function fetchRowNum($q)
{
    //print $q;
    $GLOBALS['fetch_num_'.$q]=mysql_fetch_array($q,MYSQL_NUM);
}

function getVar($q,$s)
{
    //print $s;
    $arr=$GLOBALS['fetch_'.$q];
    return $arr[$s];
}

function getNumVar($q,$n=0)
{
    $arr=$GLOBALS['fetch_num_'.$q];
    return $arr[$n];
}

function pgetNumVar($q,$n=0)
{
    $arr=$GLOBALS['fetch_num_'.$q];
    print $arr[$n];
}

function getHVar($q,$s)
{
    return encHTML(getVar($q,$s));
}

function pgetHVar($q,$s)
{
    print getHVar($q,$s);                        //see the comments above, for   function getHVar($q,$s)
}

function getUVar($q,$s)
{
    return encURL(getVar($q,$s));
}

function getSVar($q,$s)
{
    return addslashes(getVar($q,$s));
}

function pgetUVar($q,$s)
{
    print encURL(getVar($q,$s));
}

function pgetVar($q,$s)
{
    print getVar($q,$s);
}

function todefradio($s)
{
    if (!isset($GLOBALS[$s]))
	$GLOBALS[$s]='';
    if ($GLOBALS[$s]=='on')
	$GLOBALS[$s]='Y';
    else
	$GLOBALS[$s]='N';
}

function checkedIfY($qh,$field)
{
    if (getVar($qh,$field) == 'Y')
	print " CHECKED";
}

function pcomboVar($val, $actval, $toprint)
{
    print '<OPTION VALUE="'.encHTML($val).'"';
    if (!strcmp($val,$actval))
	print ' SELECTED';
    print '>'.encHTML($toprint);
}

function encS($s)
{
    return addslashes($s);
}

function decS($s)
{
    return stripslashes($s);
}

function putGS($s)
{
    global $gs,$TOL_Language;
    $nr=func_num_args();
    if (!isset($gs[$s]) || ($gs[$s]==''))
	$my="$s (not translated)";
    else
        $my= $gs[$s];
    if ($nr>1)
        for ($i=1;$i<$nr;$i++){
		$name='$'.$i;
		$val=func_get_arg($i);
		$my=str_replace($name,$val,$my);
        }
    echo $my;
}

function getGS($s)
{
    global $gs,$TOL_Language;
    $nr=func_num_args();
    if (!isset($gs[$s]) || ($gs[$s]=='') )
	$my="$s (not translated)";
    else
        $my= $gs[$s];
    if ($nr>1)
        for ($i=1;$i<$nr;$i++){
		$name='$'.$i;
		$val=func_get_arg($i);
		$my=str_replace($name,$val,$my);
        }
    return  $my;
}

function regGS($key,$value)
{
    global $gs,$PHP_SELF,$TOL_Language;
    if (isset($gs[$key])) {
	if ($key!='')
		print "The global string is already set in $PHP_SELF: $key<BR>";
    }
    else{
	if (substr($value,strlen($value)-3)==":$TOL_Language"){
	    $value=substr($value,0,strlen($value)-3);
	}
	$gs[$key]=$value;
    }
}

function dSystem($s)
{
    print ("<BR>Executing <BR>$s<BR>");
    system($s);
}

function p($s)
{
    print $s;
}

function ifYthenCHECKED($q,$f)
{
    if (getVar($q,$f)=='Y')
	echo ' CHECKED';
}

function selectLanguageFile($path, $name)
{
    global $TOL_Language;
    if (!isset($TOL_Language)){
	$TOL_Language='en';
    }
    $loclang=$TOL_Language;
    return "$path/$name.$loclang.php";
}

function pLanguageCode()
{
    global $TOL_Language;
    if (!isset($TOL_Language)){
	$TOL_Language='en';
    }
    print $TOL_Language;
}

function decSlashes($s)
{
    return str_replace("%2F", "/", $s);
}

function encParam($s)
{
    return str_replace("\"", "%22", str_replace("&", "%26", str_replace(";", "%3B", str_replace("%", "%25", $s))));
}

function pencParam($s)
{
    print encParam($s);
}

function add_subs_section($publication_id, $section_nr)
{
	// retrieve the default trial and paid time of the subscriptions
	$dd_query = "select TimeUnit, TrialTime, PaidTime from Publications where Id = "
	          . $publication_id;
	query($dd_query, 'dd');
	if ($GLOBALS['NUM_ROWS'] < 0)
		return -1;
	if ($GLOBALS['NUM_ROWS'] == 0)
		return 0;
	fetchRowNum($GLOBALS['dd']);
	$time_unit = getNumVar($GLOBALS['dd'], 0);
	$trial_time = getNumVar($GLOBALS['dd'], 1);
	$paid_time = getNumVar($GLOBALS['dd'], 2);

	switch($time_unit){
	case 'D':
		$trial_days = $trial_time;
		$paid_days = $paid_time;
		break;
	case 'W':
		$trial_days = $trial_time * 7;
		$paid_days = $paid_time * 7;
		break;
	case 'M':
		$trial_days = $trial_time * 30;
		$paid_days = $paid_time * 30;
		break;
	case 'Y':
		$trial_days = $trial_time * 365;
		$paid_days = $paid_time * 365;
		break;
	}

	$default_days['T'] = $default_paid_days['T'] = $trial_days;
	$default_days['P'] = $default_paid_days['P'] = $paid_days;

	// read active subscriptions to the given publication
	$subs_query = "select subs.Id, subs.Type, sect.StartDate, sect.Days, sect.PaidDays, "
	            . "abs(sect.SectionNumber - " . $section_nr . ") as sect_diff from "
	            . "Subscriptions as subs left join SubsSections as sect on subs.Id = "
	            . "sect.IdSubscription where subs.IdPublication = " . $publication_id
	            . " and subs.Active = 'Y' " . "order by subs.Id asc, sect_diff asc";
	query($subs_query, 'subs');
	$subs_nr = $GLOBALS['NUM_ROWS'];
	$subs_id = -1;
	$subs_type = "";
	$start_date = "";
	$days = -1;
	$paid_days = -1;
	$sect_diff = -1;
	$subs_count = 0;
	for ($index = 0; $index < $subs_nr; $index++)
	{
		fetchRowNum($GLOBALS['subs']);
		$n_subs_id = getNumVar($GLOBALS['subs'], 0);
		$n_subs_type = getNumVar($GLOBALS['subs'], 1);
		$n_start_date = getNumVar($GLOBALS['subs'], 2);
		$n_days = getNumVar($GLOBALS['subs'], 3);
		$n_paid_days = getNumVar($GLOBALS['subs'], 4);
		$n_sect_diff = getNumVar($GLOBALS['subs'], 5);

		if (($n_subs_id != $subs_id && $subs_id != -1) || $index == ($subs_nr - 1))
		{
			if ($start_date == "")
			{
				$start_date = "now()";
				$days = $default_days[$subs_type];
				$paid_days = $default_paid_days[$subs_type];
			}
			else
				$start_date = "'" . $start_date . "'";
			$insert_query = "insert into SubsSections set IdSubscription = " . $subs_id
			              . ", SectionNumber = " . $section_nr . ", StartDate = "
			              . $start_date . ", Days = " . $days . ", PaidDays = " . $paid_days;
			query($insert_query);
			$subs_count ++;

			$sect_diff = 1;
			$subs_id = $n_subs_id;
			$subs_type = $n_subs_type;
			$start_date = $n_start_date;
			$days = $n_days;
			$paid_days = $n_paid_days;
			continue;
		}

		if ($n_sect_diff < $sect_diff || $sect_diff == -1)
		{
			$start_date = $n_start_date;
			$days = $n_days;
			$paid_days = $n_paid_days;
		}

		$subs_id = $n_subs_id;
		$subs_type = $n_subs_type;
		$sect_diff = $n_sect_diff;
	}

	return $subs_count;
}

function del_subs_section($publication_id, $section_nr)
{
	$subs_query = "select Id from Subscriptions where IdPublication = " . $publication_id;
	query($subs_query, 'subs');
	if ($GLOBALS['NUM_ROWS'] < 0)
		return -1;
	if ($GLOBALS['NUM_ROWS'] == 0)
		return 0;
	$subs_nr = $GLOBALS['NUM_ROWS'];
	for ($index = 0; $index < $subs_nr; $index++)
	{
		fetchRowNum($GLOBALS['subs']);
		$subs_id = getNumVar($GLOBALS['subs'], 0);
		$del_query = "delete from SubsSections where IdSubscription = " . $subs_id
		           . " and SectionNumber = " . $section_nr;
		query($del_query);
	}
	return $index;
}

?>
