<?php $this->headLink()->appendStylesheet($this->baseUrl('/admin-style/comments.css')); ?>
<div class="wrapper">
  <div class="ui-widget-content small-block block-shadow commentsHolder">
    <div class="padded clearfix inner-tabs">
      <div class="tabs">
        <ul>
          <li><a href="#tabs-1">Comments</a></li>
          <li><a href="#tabs-2">Users</a></li>
        </ul>
        <div id="tabs-1">
<div id="showComments">
<fieldset>
<legend><?php putGS('Show');?></legend>
<ul class="status_filter">
    <li class="published" style="display: none;">
        <input type="checkbox" id="show_published" value="approved">
        <label for="show_published"><?php putGS('Published');?></label>
    </li>
    <li class="new">
        <input type="checkbox" id="show_new" value="pending">
        <label for="show_new"><?php putGS('New');?></label>
    </li>
    <li class="approved">
        <input type="checkbox" id="show_approved" value="approved">
        <label for="show_approved"><?php putGS('Approved');?></label>
    </li>
    <li class="hidden">
        <input type="checkbox" id="show_hidden" value="hidden">
        <label for="show_hidden"><?php putGS('Hidden');?></label>
    </li>
    <li class="deleted">
        <input type="checkbox" id="show_deleted" value="deleted">
        <label for="show_deleted"><?php putGS('Deleted');?></label>
    </li>
</ul>
<script type="text/javascript">
$().ready(function(){
    $('.status_filter li').click(function(evt){
        var ck = $(this).find('input[type="checkbox"]');
        var checked = true;
        if (ck.attr("checked")) {
            checked = false;
            ck.removeAttr("checked");
        }
        else
            ck.attr("checked","checked");
        datatableCallback.serverData[ck.val()] = checked;
        datatable.fnDraw();
        evt.preventDefault();
    });
});
</script>
</fieldset>
</div>

<div id="actionExpand">
<fieldset>
  <select class="input_select actions">
    <option value=""><?php putGS('Actions');?></option>
    <option value="pendding"><?php putGS('New');?></option>
    <option value="approved"><?php putGS('Approved');?></option>
    <option value="hidden"><?php putGS('Hidden');?></option>
    <option value="deleted"><?php putGS('Deleted');?></option>
  </select>
</fieldset>
<fieldset class="right">
  <label>Items per page:</label>
  <select class="input_select">
    <option>10</option>
    <option>25</option>
    <option>50</option>
    <option>100</option>
  </select>
</fieldset>
</div>
<script>
$().ready(function(){
    $('.actions').change(function(){
        action = $(this);
        var status = action.val();
        if(status != '')
        {
            ids = [];
            $('.table-checkbox:checked').each(function(){
                ids[ids.length] = $(this).val();
            });
            action.val('');
            if(!ids.length)
                return;
            $.ajax({
                type: 'POST',
                url: 'comment/set-status/format/json',
                data: {
                   "comment": ids,
                   "status": status
                },
                success: function(data) {
                    flashMessage("<?php putGS('Comments updated.')?>");
                	datatable.fnDraw();
                },
                error: function (rq, status, error) {
                    if (status == 0 || status == -1) {
                        flashMessage("<?php putGS('Unable to reach Campsite. Please check your internet connection.'); ?>", "error");
                    }
                }
            });
        }
    });
});
</script>
<?php $this->renderDatatable(); ?>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
$().ready(function(){
	$('.datatable .action').live('click',function(){
	    var el = $(this);
	    var id = el.attr('id');
	    var ids = [id.match(/\d+/)[0]];
	    var status = id.match(/[^_]+/)[0];
        $.ajax({
            type: 'POST',
            url: 'comment/set-status/format/json',
            data: {
               "comment": ids,
               "status": status
            },
            success: function(data) {
                datatable.fnDraw();
                flashMessage("<?php putGS('Comments updated.')?>");
            },
            error: function (rq, status, error) {
                if (status == 0 || status == -1) {
                    flashMessage("<?php putGS('Unable to reach Campsite. Please check your internet connection.'); ?>", "error");
                }
            }
        });

	});
	$('.dateCommentHolderEdit form').live('submit', function(){
	    var that = this;
        $.ajax({
            type: 'POST',
            url: $(this).attr('action'),
            data: $(this).serialize(),
            success: function(data) {
                datatable.fnDraw();
                flashMessage("<?php putGS('Comment updated.')?>");
            },
            error: function (rq, status, error) {
                if (status == 0 || status == -1) {
                    flashMessage("<?php putGS('Unable to reach Campsite. Please check your internet connection.'); ?>", "error");
                }
            }
        });
        return false;
	});
	$('.datatable .action-edit').live('click', function(){
		 var el = $(this);
		 //console.log('here');
		 el.parents('td').find('.content-edit').toggle("slow");
	});
});
</script>
<script type="text/javascript">
var datatableCallback = {
	serverData: {},
	row: function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
	    that = datatableCallback;
        var tr = $('<tr></tr>');
        tr.addClass('status_deleted');
        tr.hover(function() {
        	   $(this).find(".commentBtns").css("visibility","visible");
            },function() {
            	$(this).find(".commentBtns").css("visibility","hidden");
        });/*
        .click(function(e){
            //$(this).find(".action-edit").click();
            e.preventDefault();
        	return false;
        });
        */
        var td = $('<td></td>');
        td.attr('colspan',5);
        nRow = $(nRow);
        actions = nRow.find('.commentAction').first();
        nRow.find('.commentTimeCreated').removeClass('commentTimeCreated').addClass('commentMessage');
        nActions = actions.clone();
        actions.hide();
        td.append($('<table cellspacing="0" cellpadding="0">').append(nRow));
        td.append(nActions.html());
        jRow = tr.append(td);
        that.rowIndex++;
        return jRow.get(0);
    },
    addServerData: function ( sSource, aoData, fnCallback ) {
    	that = datatableCallback;
        for(i in that.serverData) {
            if(that.serverData[i])
                aoData.push({"name": "sFilter[status][]", "value": i});
        }
    	$.getJSON( sSource, aoData, function (json) {
    		fnCallback(json);
    	});
    }
}
</script>